---
openapi: 3.0.1
info:
  title: API Iume Public
  version: v1
  description: Public endpoints
paths:
  "/v1/restaurants/{restaurant_id}/orders":
    post:
      summary: Create order
      tags:
      - Restaurants/Orders
      parameters:
      - name: restaurant_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '201':
          description: created order
          content: {}
        '422':
          description: create fail order invalid product
          content:
            application/json:
              schema:
                type: object
                properties:
                  order_details.product_id:
                    type: array
                    items:
                      type: string
                      example: é inválido
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                order:
                  type: object
                  properties:
                    order_details_attributes:
                      type: array
                      items:
                        type: object
                      example:
                      - product_id: 1
                        quantity: 1
                      - product_id: 2
                        quantity: 3
                  required:
                  - product_id
                  - quantity
              required:
              - order_details_attributes
  "/v1/restaurants/sections/{section_id}/products":
    get:
      summary: All products of a section
      tags:
      - Products
      description: If you need to get the preview, use preview params to true and
        put the token
      security:
      - bearer: []
      parameters:
      - name: section_id
        in: path
        required: true
        schema:
          type: integer
      - name: preview
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: products array preview
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/product"
        '404':
          description: section not found
          content: {}
  "/v1/restaurants/sections/{section_id}/products/{id}":
    get:
      summary: Get product by section id and product id
      tags:
      - Products
      security:
      - bearer: []
      parameters:
      - name: section_id
        in: path
        required: true
        schema:
          type: integer
      - name: id
        in: path
        required: true
        schema:
          type: integer
      - name: preview
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: product found prewiew
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    "$ref": "#/components/schemas/product"
        '404':
          description: product not found
          content: {}
  "/v1/restaurants/{id}":
    get:
      summary: Get restaurant
      tags:
      - Restaurants
      description: If you need to get the preview, use preview params to true and
        put the token
      security:
      - bearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: by_id
        in: query
        required: false
        schema:
          type: string
      - name: preview
        in: query
        required: false
        schema:
          type: string
      - name: included
        in: query
        required: false
        example: tool_whatsapp,phones,address,address.city,address.city.state
        schema:
          type: string
      responses:
        '200':
          description: restaurant with preview
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    "$ref": "#/components/schemas/restaurant"
                  included:
                    type: array
                    items:
                      type: object
                    example:
                    - id: '1'
                      type: tools_whatsapps
                      attributes:
                        active: true
                      relationships:
                        phones:
                          data:
                            id: '1'
                            type: phones
                    - id: '1'
                      type: phones
                      attributes:
                        number: 11-9999-9999
                    - id: '1'
                      type: sections
                      attributes:
                        name: Drinks
                        description: Txt here
                        position: 1
                    - id: '1'
                      type: addresses
                      attributes:
                        street: Alameda Henry
                        neighborhood: Rodovia Ofélia Carreira
                        complement: Autumn Acres
                        number: s/n
                        reference: Lake
                        cep: 44900-000
                      relationships:
                        cities:
                          data:
                            id: '1'
                            type: cities
                    - id: '1'
                      type: cities
                      attributes:
                        name: Nicolau Vergueiro
                        capital: false
                      relationships:
                        states:
                          data:
                            id: '1'
                            type: states
                    - id: '1'
                      type: states
                      attributes:
                        name: Acre
                        acronym: BA
        '404':
          description: restaurant not found
          content: {}
components:
  schemas:
    product:
      type: object
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: products
        attributes:
          type: object
          properties:
            price:
              type: string
              example: '10.0'
            name:
              type: string
              example: Mushroom Risotto
            description:
              type: string
              example: SVIs mission is to deliver quality products at affordable prices
                to our independent retailers, wholesalers and food service partners
                around the world by providing international procurement, distribution,
                marketing and supply chain management.
              nullable: true
            position:
              type: integer
              example: 0
              nullable: true
            image:
              type: object
              nullable: true
              properties:
                original:
                  type: string
                  example: https://loremflickr.com/300/300
                small:
                  type: string
                  example: https://loremflickr.com/300/300
          required:
          - price
          - name
    section:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          example: sections
        attributes:
          type: object
          properties:
            name:
              type: string
              example: Drinks
            description:
              type: string
              example: Txt here
            position:
              type: integer
              example: 1
    phone:
      type: object
      properties:
        id:
          type: string
          example: '1'
        type:
          type: string
          example: phones
        attributes:
          type: object
          properties:
            number:
              type: string
    restaurant:
      type: object
      properties:
        type:
          type: string
          example: restaurants
        id:
          type: string
        attributes:
          type: object
          properties:
            name:
              type: string
            slug:
              type: string
            active:
              type: boolean
          required:
          - name
          - slug
          - active
        relationships:
          type: object
          properties:
            sections:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                  example:
                  - id: '1'
                    type: sections
                  - id: '1'
                    type: phones
                  - id: '1'
                    type: tool_whatsapps
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
servers:
- url: http://localhost:3000
  variables:
    defaultHost:
      default: http://localhost:3000
- url: https://imenu-dev.herokuapp.com
  variables:
    defaultHost:
      default: https://imenu-dev.herokuapp.com
